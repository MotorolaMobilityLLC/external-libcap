.TH CAP_CLEAR 3 "29th March 2008" "" "Linux Programmer's Manual"
.SH NAME
cap_clear, cap_get_flag, cap_set_flag \- capability data object manipulation
.SH SYNOPSIS
.B #include <sys/capability.h>
.sp
.BI "int cap_clear(cap_t " cap_p );
.sp
.BI "int cap_clear_flag(cap_t " cap_p ", cap_flag_t " flag ");"
.sp
.BI "int cap_get_flag(cap_t " cap_p ", cap_value_t " cap ", cap_flag_t " flag ", cap_flag_value_t *" value_p ");"
.sp
.BI "int cap_set_flag(cap_t " cap_p ", cap_flag_t " flag ", int " ncap ", const cap_value_t *" caps ", cap_flag_value_t " value ");"
.sp
Link with \fI-lcap\fP.
.SH DESCRIPTION
.BR cap_clear ()
initializes the capability state in working storage identified by
.I cap_p
in such a way that all capability flags are cleared.
.PP
.BR cap_clear_flag ()
resets, to
.BR CAP_CLEAR ,
all of the capabilities of the specified capability flag,
.IR flag .
.PP
.BR cap_get_flag ()
obtains the current value of the capability flag,
.IR flag ,
of the capability,
.IR cap ,
from the capability state identified by
.I cap_p
and places it in the location pointed to by
.IR value_p .
.PP
.BR cap_set_flag ()
sets the flag,
.IR flag ,
of each capability in the array
.I caps
in the capability state identified by
.I cap_p
to
.IR value .
The argument,
.IR ncap ,
is used to specify the number of capabilities in the array,
.IR caps .
.PP
A
.I cap_value_t
can identify any capability, such as
.BR CAP_CHOWN .
A
.I cap_flag_t
can be set to
.BR CAP_EFFECTIVE ,
.B CAP_INHERITABLE
or
.BR CAP_PERMITTED .
A
.I cap_flag_value_t
can be
.B CAP_CLEAR
(0) or
.B CAP_SET
(1).
.SH "RETURN VALUE"
.BR cap_clear (),
.BR cap_clear_flag (),
.BR cap_get_flag ()
and
.B cap_set_flag
return zero on success, and \-1 on failure.
.PP
On failure,
.I errno
is set to 
.BR EINVAL ,
indicating that one of the arguments is invalid.
.SH "CONFORMING TO"
These functions are as per the withdrawn POSIX.1e draft specification.
.BR cap_clear_flag ()
is a Linux extension.
.SH "SEE ALSO"
.BR cap_copy_ext (3),
.BR cap_from_text (3),
.BR cap_get_file (3),
.BR cap_get_proc (3),
.BR cap_init (3),
.BR capabilities (7)
